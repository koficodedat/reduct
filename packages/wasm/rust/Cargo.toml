[package]
name = "reduct-wasm"
version = "0.1.0"
authors = ["Reduct Team"]
edition = "2021"
description = "WebAssembly acceleration for Reduct"
license = "MIT"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook", "simd"]
wee_alloc = ["dep:wee_alloc"]
# SIMD support using the wide crate (works on stable Rust)
simd = ["wide"]

[dependencies]
wasm-bindgen = "0.2.84"
js-sys = "0.3.61"
web-sys = { version = "0.3.61", features = ["console"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

# Parallel iterator support
rayon = "1.8.0"

# Memory management utilities
bumpalo = { version = "3.14.0", features = ["collections"] }

# SIMD support for WebAssembly
wide = { version = "0.7.13", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
